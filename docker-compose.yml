name: game-store-app

services:
  nginx:
    image: nginx:latest
    container_name: game-store-app-nginx
    ports:
      - "80:80"
      - "443:443"
      - "9090:9090"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend-1
      - backend-2
      - backend-3
      - frontend
    restart: always
    networks:
      - game-store-network

  backend-1:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: game-store-app-backend-1
    environment:
      - APP_ENV=${APP_ENV}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PORT=${PORT}
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - game-store-network

  backend-2:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: game-store-app-backend-2
    environment:
      - APP_ENV=${APP_ENV}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PORT=${PORT}
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - game-store-network

  backend-3:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: game-store-app-backend-3
    environment:
      - APP_ENV=${APP_ENV}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PORT=${PORT}
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - game-store-network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: game-store-app-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_MODE=api
      - VITE_BACKEND_PORT=9090
    restart: always
    networks:
      - game-store-network

  db:
    image: postgres:latest
    container_name: game-store-app-db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - game-store-network

volumes:
  postgres_data:

networks:
  game-store-network:
    driver: bridge

